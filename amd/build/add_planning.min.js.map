{"version":3,"file":"add_planning.min.js","sources":["../src/add_planning.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript module for editing planning presets.\n *\n * @module     mod_competvet/editplanning\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ModalForm from 'core_form/modalform';\nimport Notification from 'core/notification';\nimport {get_string as getString} from 'core/str';\n\nconst selectors = {\n    PLANNING_LIST_ID: 'id_competvetplanningcontainer',\n    EDIT_PLANNING_BUTTON_ACTION: '[data-action=\"editplanning\"]',\n    ADD_PLANNING_BUTTON_ACTION: '[data-action=\"addplanning\"]',\n};\n\n/**\n * Initialize module\n */\nexport const init = async () => {\n    document.addEventListener('click', (event) => {\n        const editPlanningButton = event.target.closest(selectors.EDIT_PLANNING_BUTTON_ACTION);\n        const addPlanningButton = event.target.closest(selectors.ADD_PLANNING_BUTTON_ACTION);\n\n        if (!editPlanningButton && !addPlanningButton) {\n            return;\n        }\n        const button = addPlanningButton || editPlanningButton;\n        event.preventDefault();\n        const modalForm = new ModalForm({\n            modalConfig: {\n                title: editPlanningButton ? getString('edit') : getString('add'),\n            },\n            formClass: 'mod_competvet\\\\form\\\\planning_edit_form',\n            args: {\n                cmid: button.dataset.cmid,\n                planningid: button.dataset?.planningId,\n            },\n            saveButtonText: getString('save'),\n        });\n\n        modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, event => {\n            if (event.detail.result) {\n                window.location.assign(event.detail.url);\n            } else {\n                Notification.addNotification({\n                    type: 'error',\n                    message: event.detail.errors.join('<br>')\n                });\n            }\n        });\n        modalForm.show();\n    });\n};\n"],"names":["selectors","async","document","addEventListener","event","editPlanningButton","target","closest","addPlanningButton","button","preventDefault","modalForm","ModalForm","modalConfig","title","formClass","args","cmid","dataset","planningid","_button$dataset","planningId","saveButtonText","events","FORM_SUBMITTED","detail","result","window","location","assign","url","addNotification","type","message","errors","join","show"],"mappings":";;;;;;0LA0BMA,sCAE2B,+BAF3BA,qCAG0B,4CAMZC,UAChBC,SAASC,iBAAiB,SAAUC,kCAC1BC,mBAAqBD,MAAME,OAAOC,QAAQP,uCAC1CQ,kBAAoBJ,MAAME,OAAOC,QAAQP,0CAE1CK,qBAAuBG,+BAGtBC,OAASD,mBAAqBH,mBACpCD,MAAMM,uBACAC,UAAY,IAAIC,mBAAU,CAC5BC,YAAa,CACTC,MAAOT,oBAAqB,mBAAU,SAAU,mBAAU,QAE9DU,UAAW,0CACXC,KAAM,CACFC,KAAMR,OAAOS,QAAQD,KACrBE,mCAAYV,OAAOS,0CAAPE,gBAAgBC,YAEhCC,gBAAgB,mBAAU,UAG9BX,UAAUR,iBAAiBQ,UAAUY,OAAOC,gBAAgBpB,QACpDA,MAAMqB,OAAOC,OACbC,OAAOC,SAASC,OAAOzB,MAAMqB,OAAOK,2BAEvBC,gBAAgB,CACzBC,KAAM,QACNC,QAAS7B,MAAMqB,OAAOS,OAAOC,KAAK,aAI9CxB,UAAUyB"}