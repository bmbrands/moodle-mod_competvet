define("mod_competvet/local/manager/manager_app_planning",["exports","mod_competvet/local/grading2/competstate","mod_competvet/local/manager/repository","./plannings"],(function(_exports,_competstate,_repository,_plannings){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Moves wrapping navigation items into a more menu.
   *
   * @module     mod_competvet/local/manager/manager_app_planning
   * @class      competvet
   * @copyright  2024 Bas Brands
   * @author     Bas Brands <bas@sonsbeekmedia.nl>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_competstate=_interopRequireDefault(_competstate),_repository=_interopRequireDefault(_repository);class Manager{constructor(){this.app=document.querySelector('[data-region="planning"]'),this.cmId=this.app.dataset.cmId,this.dataset=this.app.region,this.addEventListeners(),this.getData()}async getData(){const response=await _repository.default.getData(this.cmId);response&&_competstate.default.setData(response)}addEventListeners(){document.addEventListener("click",(e=>{let btn=e.target.closest("[data-action]");btn&&(e.preventDefault(),this.actions(btn))})),this.app.classList.add("jsenabled")}actions(btn){"add"===btn.dataset.action&&this.add(btn),"edit"===btn.dataset.action&&this.edit(btn),"save"===btn.dataset.action&&this.save(),"delete"===btn.dataset.action&&this.delete(btn)}add(btn){let state=_competstate.default.getData();if("planning"===btn.dataset.type){let newPlanningId=1;state.plannings.length>0&&(newPlanningId=Math.max(...state.plannings.map((element=>element.id)))+1),state.plannings.push({id:newPlanningId,startdate:"",enddate:"",groupname:"",edit:!0})}_competstate.default.setData(state)}delete(btn){let state=_competstate.default.getData();"planning"===btn.dataset.type&&(state.plannings=state.plannings.filter((element=>element.id!==parseInt(btn.dataset.id)))),_competstate.default.setData(state)}edit(btn){let state=_competstate.default.getData();if(state.plannings.forEach((element=>{element.edit=!1})),"planning"===btn.dataset.type){state.plannings.find((element=>element.id===parseInt(btn.dataset.id))).edit=!0}_competstate.default.setData(state)}save(){const state=_competstate.default.getData();_repository.default.saveData(state)}}var _default={init:()=>{new Manager}};return _exports.default=_default,_exports.default}));

//# sourceMappingURL=manager_app_planning.min.js.map