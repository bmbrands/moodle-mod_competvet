define("mod_competvet/local/manager/manager_app_planning",["exports","mod_competvet/local/competstate","mod_competvet/local/new-repository","./plannings"],(function(_exports,_competstate,_newRepository,_plannings){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Moves wrapping navigation items into a more menu.
   *
   * @module     mod_competvet/local/manager/manager_app_planning
   * @class      competvet
   * @copyright  2024 Bas Brands
   * @author     Bas Brands <bas@sonsbeekmedia.nl>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_competstate=_interopRequireDefault(_competstate),_newRepository=_interopRequireDefault(_newRepository);class Manager{constructor(){this.app=document.querySelector('[data-region="planning"]'),this.cmId=this.app.dataset.cmId,this.situationId=this.app.dataset.situationId,this.dataset=this.app.region,this.addEventListeners(),this.getData()}async getData(){const response=await _newRepository.default.getPlannings(this.cmId);response&&_competstate.default.setData(response)}addEventListeners(){document.addEventListener("click",(e=>{let btn=e.target.closest("[data-action]");btn&&(e.preventDefault(),this.actions(btn))})),this.app.classList.add("jsenabled")}async actions(btn){if("add"===btn.dataset.action&&this.add(btn),"edit"===btn.dataset.action&&this.edit(btn),"save"===btn.dataset.action){await this.save()&&this.stopEdit()}"delete"===btn.dataset.action&&this.delete(btn)}add(btn){let state=_competstate.default.getData();"planning"===btn.dataset.type&&state.plannings.push({id:0,situationid:this.situationId,startdate:"",enddate:"",groupid:"",session:"",edit:!0,groups:state.groups}),_competstate.default.setData(state)}delete(btn){let state=_competstate.default.getData();"planning"===btn.dataset.type&&(state.plannings=state.plannings.filter((element=>element.id!==parseInt(btn.dataset.id)))),_competstate.default.setData(state)}edit(btn){let state=_competstate.default.getData();if(state.plannings.forEach((element=>{element.edit=!1})),"planning"===btn.dataset.type){state.plannings.find((element=>element.id===parseInt(btn.dataset.id))).edit=!0}_competstate.default.setData(state)}stopEdit(){const state=_competstate.default.getData();state.plannings.forEach((element=>{element.edit=!1})),_competstate.default.setData(state)}update(){const state=_competstate.default.getData();state.plannings.forEach((element=>{element.haschanged=!1,element.edit&&(element.haschanged=!0,element.startdate=this.getValue("planitem","startdate",element.id),element.enddate=this.getValue("planitem","enddate",element.id),element.groupid=this.getValue("planitem","groupid",element.id),""!==element.groupid&&(element.groupname=element.groups.find((group=>group.id===parseInt(element.groupid))).name),element.session=this.getValue("planitem","session",element.id),""===element.startdate&&(element.errorstartdate=!0,element.error=!0),""===element.enddate&&(element.errorenddate=!0,element.error=!0),""===element.groupid&&(element.errorgroupid=!0,element.error=!0),""!==element.startdate&&""!==element.enddate&&""!==element.groupid&&(element.error=!1))})),_competstate.default.setData(state)}get planningObjectKeys(){return["id","situationid","startdate","enddate","groupid","session","haschanged","deleted"]}async save(){this.update();const state=_competstate.default.getData();if(state.plannings.find((element=>element.error)))return!1;const saveState={plannings:[]};state.plannings.length>0&&(saveState.plannings=[...state.plannings]),saveState.plannings.forEach((element=>{Object.keys(element).forEach((key=>{this.planningObjectKeys.includes(key)||delete element[key]}))}));const result=await _newRepository.default.savePlannings(saveState);return this.getData(),result}getValue(element,property,id){const domNode=this.app.querySelector('[data-region="'.concat(element,'"][data-id="').concat(id,'"] [data-field="').concat(property,'"]'));if(!domNode){window.console.log("Element not found: ".concat(element," ").concat(property," ").concat(id));const element=this.app.querySelector('[data-region="'.concat(element,'"][data-id="').concat(id,'"]'));if(!element)return window.console.log("Element not found: ".concat(element," ").concat(id)),""}return domNode.value}}var _default={init:()=>{new Manager}};return _exports.default=_default,_exports.default}));

//# sourceMappingURL=manager_app_planning.min.js.map