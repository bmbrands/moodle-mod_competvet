define("mod_competvet/local/user_situation_component",["exports","core/reactive","mod_competvet/local/grading_app_reactive","mod_competvet/local/events","core/templates"],(function(_exports,_reactive,_grading_app_reactive,_events,_templates){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * User selector component.
   *
   * @module     mod_competvet/local/user_situation_component
   * @copyright  2023 Laurent David <laurent@call-learning.fr>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_events=_interopRequireDefault(_events),_templates=_interopRequireDefault(_templates);class _default extends _reactive.BaseComponent{create(){this.name="situation-selector",this.selectors={NEXT_PLANNING:"[data-action='next-planning']",PREVIOUS_PLANNING:"[data-action='previous-planning']",USER_INFO_SELECTOR:"[data-region='user-info']",PLANNING_LIST:"#change-planning-select"},this.cmId=this.getElement().dataset.cmid}static init(element,selectors){const cmId=element.dataset.cmid;return new this({element:element,reactive:(0,_grading_app_reactive.getGradingAppReactive)(cmId),selectors:selectors})}async stateReady(){const target=this.getElement();this.addEventListener(target.querySelector(this.selectors.NEXT_PLANNING),"click",this._nextPlanning),this.addEventListener(target.querySelector(this.selectors.PREVIOUS_PLANNING),"click",this._previousPlanning)}getWatchers(){return[{watch:"state.currentUser:updated",handler:this._updateUser},{watch:"state.currentUser:created",handler:this._updateUser},{watch:"state.plannings:updated",handler:this._updatePlannings}]}_nextPlanning(event){event.preventDefault(),this.reactive.dispatch(_events.default.planningChange,"next")}_previousPlanning(event){event.preventDefault(),this.reactive.dispatch(_events.default.planningChange,"previous")}async _updateUser(_ref){let{element:element}=_ref;const currentUser=element.currentUser,{html:html,js:js}=await _templates.default.renderForPromise("mod_competvet/grading/navigation/user_info",{...currentUser});_templates.default.replaceNodeContents(this.getElement().querySelector(this.selectors.USER_INFO_SELECTOR),html,js)}_updatePlannings(_ref2){let{element:element}=_ref2;const selectElement=this.getElement().querySelector(this.selectors.PLANNING_LIST);selectElement.innerHTML="",element.plannings.forEach((async planning=>{const option=document.createElement("option");option.value=planning.id;const{html:html}=await _templates.default.renderForPromise("mod_competvet/grading/navigation/planning_info",{...planning});option.innerHTML=html,selectElement.appendChild(option)}))}}return _exports.default=_default,_exports.default}));

//# sourceMappingURL=user_situation_component.min.js.map