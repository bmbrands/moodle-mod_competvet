{"version":3,"file":"user_selector.min.js","sources":["../../src/local/user_selector.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * User selector component.\n *\n * This component is mostly used to ensure all subcomponents find a parent\n * compoment with a reactive instance defined.\n *\n * @module     mod_competvet/local/user_selector\n * @class     mod_competvet/local/userSelector\n * @copyright  2023 Laurent David <laurent@call-learning.fr>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {BaseComponent} from 'core/reactive';\nimport {dispatchStateChangedEvent, UserList} from 'mod_competvet/local/user_list';\nimport {default as Events} from 'mod_competvet/local/events';\n\nexport default class Component extends BaseComponent {\n\n    /**\n     * Constructor hook.\n     */\n    create() {\n        // Optional component name for debugging.\n        this.name = 'user-selector';\n    }\n\n    /**\n     * Static method to create a component instance form the mustache template.\n     *\n     * @param {Node} element the DOM main element\n     * @param {object} selectors optional css selector overrides\n     * @return {Component}\n     */\n    static init(element, selectors) {\n        const cmId = element.dataset.cmid;\n        const userList = new UserList({\n            eventDispatch: dispatchStateChangedEvent,\n            eventName: Events.userChanged,\n        });\n        userList.loadUsers(cmId, 'student');\n        return new Component({\n            element: element,\n            reactive: userList,\n            selectors,\n        });\n    }\n\n    async stateReady(state) {\n        // Get the element to replace.\n        const target = this.getElement();\n        this.subcomponent = await this.renderComponent(\n            target,\n            'mod_competvet/grading/navigation_user_selector',\n            state.users\n        );\n    }\n}\n"],"names":["Component","BaseComponent","create","name","element","selectors","cmId","dataset","cmid","userList","UserList","eventDispatch","dispatchStateChangedEvent","eventName","Events","userChanged","loadUsers","reactive","state","target","this","getElement","subcomponent","renderComponent","users"],"mappings":";;;;;;;;;;;mJA+BqBA,kBAAkBC,wBAKnCC,cAESC,KAAO,4BAUJC,QAASC,iBACXC,KAAOF,QAAQG,QAAQC,KACvBC,SAAW,IAAIC,oBAAS,CAC1BC,cAAeC,qCACfC,UAAWC,gBAAOC,qBAEtBN,SAASO,UAAUV,KAAM,WAClB,IAAIN,UAAU,CACjBI,QAASA,QACTa,SAAUR,SACVJ,UAAAA,6BAISa,aAEPC,OAASC,KAAKC,kBACfC,mBAAqBF,KAAKG,gBAC3BJ,OACA,iDACAD,MAAMM"}