{"version":3,"file":"grading_app_component.min.js","sources":["../../../src/local/grading2/grading_app_component.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JS for the competvet Grading App UI.\n *\n * @module     mod_competvet/local/grading2/grading_app_component\n * @copyright  2024 Bas Brands <bas@sonsbeekmedia.nl>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport Repository from './repository';\nimport CompetState from './competstate';\n// import CompetCharts from './charts';\nimport './grading_app_autoregions';\nimport UserNavRegions from './grading_app_usernavigation';\nimport './grading_app_evaluations';\nimport './grading_app_comments';\n\n// import './helpers';\n\nclass competvet {\n    /*\n     * The Grading App Element.\n     */\n    gradingApp;\n\n    /*\n    * The cmid.\n    */\n    competvet;\n\n    /*\n    * The Current User.\n    */\n    currentUser;\n\n    /**\n     * Constructor.\n     */\n    constructor() {\n        this.gradingApp = document.querySelector('[data-region=\"grading-app\"]');\n        this.cmId = this.gradingApp.dataset.cmId;\n        this.planningId = this.gradingApp.dataset.planningid;\n        this.userlist = [];\n        this.currentUser = 0;\n        this.render();\n        this.addEventListeners();\n    }\n\n    /**\n     * Main render call.\n     */\n    async render() {\n        await this.getUsers();\n        this.renderUserNavigation();\n        await this.getEvaluations();\n    }\n\n    /**\n     * Get the list of users for grading.\n     */\n    async getUsers() {\n        const args = {\n            cmid: this.cmId,\n            roletype: 'student'\n        };\n        const response = await Repository.getUserList(args);\n        if (!response.users) {\n            return;\n        }\n        this.userlist = response.users;\n        const currentUserId = this.gradingApp.dataset.studentid;\n        if (currentUserId && currentUserId !== '0') {\n            this.setCurrentUser(this.userlist.find(user => user.id === parseInt(currentUserId)));\n        } else {\n            this.setCurrentUser(this.userlist[0]);\n        }\n    }\n\n    /**\n     * Render the user navigation.\n     */\n    renderUserNavigation() {\n        const context = {\n            'user': this.currentUser,\n        };\n        let stateData = CompetState.getData();\n        UserNavRegions.forEach(regionName => {\n            stateData[regionName] = context;\n            CompetState.setData(stateData);\n        });\n    }\n\n    /**\n     * Get the Evaluations.\n     */\n    async getEvaluations() {\n        const args = {\n            userid: this.currentUser.id,\n            planningid: this.planningId\n        };\n        const response = await Repository.getEvaluations(args);\n        if (!response.evaluations) {\n            return;\n        }\n        const context = {\n            'eval': response.evaluations,\n            'comments': response.comments\n        };\n        let stateData = CompetState.getData();\n        stateData.evaluations = context;\n        CompetState.setData(stateData);\n    }\n\n    /**\n     * Set the current user\n     * @param {string} direction The direction to move.\n     */\n    moveUser(direction) {\n        let index = this.userlist.indexOf(this.currentUser);\n        if (direction === 'prev' && index > 0) {\n            this.setCurrentUser(this.userlist[index - 1]);\n        } else if (direction === 'next' && index < this.userlist.length - 1) {\n            this.setCurrentUser(this.userlist[index + 1]);\n        }\n        this.renderUserNavigation();\n        this.getEvaluations();\n    }\n\n    /**\n     * Set the current user.\n     * @param {Object} user The user to set as current.\n     */\n    setCurrentUser(user) {\n        this.currentUser = user;\n    }\n\n    /**\n     * Add event listeners.\n     */\n    addEventListeners() {\n        document.addEventListener('click', (event) => {\n            if (event.target.closest('[data-action=\"prevuser\"]')) {\n                this.moveUser('prev');\n            }\n            if (event.target.closest('[data-action=\"nextuser\"]')) {\n                this.moveUser('next');\n            }\n            if (event.target.closest('[data-action=\"reload\"]')) {\n                this.getEvaluations();\n            }\n        });\n    }\n}\n\n/*\n * Initialise the criteria management.\n *\n */\nconst init = () => {\n    new competvet();\n};\n\nexport default {\n    init: init,\n};"],"names":["competvet","constructor","gradingApp","document","querySelector","cmId","this","dataset","planningId","planningid","userlist","currentUser","render","addEventListeners","getUsers","renderUserNavigation","getEvaluations","args","cmid","roletype","response","Repository","getUserList","users","currentUserId","studentid","setCurrentUser","find","user","id","parseInt","context","stateData","CompetState","getData","forEach","regionName","setData","userid","evaluations","comments","moveUser","direction","index","indexOf","length","addEventListener","event","target","closest","init"],"mappings":"s2BAgCMA,UAmBFC,iJACSC,WAAaC,SAASC,cAAc,oCACpCC,KAAOC,KAAKJ,WAAWK,QAAQF,UAC/BG,WAAaF,KAAKJ,WAAWK,QAAQE,gBACrCC,SAAW,QACXC,YAAc,OACdC,cACAC,yCAOCP,KAAKQ,gBACNC,6BACCT,KAAKU,wCAOLC,KAAO,CACTC,KAAMZ,KAAKD,KACXc,SAAU,WAERC,eAAiBC,oBAAWC,YAAYL,UACzCG,SAASG,kBAGTb,SAAWU,SAASG,YACnBC,cAAgBlB,KAAKJ,WAAWK,QAAQkB,UAC1CD,eAAmC,MAAlBA,mBACZE,eAAepB,KAAKI,SAASiB,MAAKC,MAAQA,KAAKC,KAAOC,SAASN,uBAE/DE,eAAepB,KAAKI,SAAS,IAO1CK,6BACUgB,QAAU,MACJzB,KAAKK,iBAEbqB,UAAYC,qBAAYC,8CACbC,SAAQC,aACnBJ,UAAUI,YAAcL,6BACZM,QAAQL,2CAQlBf,KAAO,CACTqB,OAAQhC,KAAKK,YAAYkB,GACzBpB,WAAYH,KAAKE,YAEfY,eAAiBC,oBAAWL,eAAeC,UAC5CG,SAASmB,yBAGRR,QAAU,MACJX,SAASmB,qBACLnB,SAASoB,cAErBR,UAAYC,qBAAYC,UAC5BF,UAAUO,YAAcR,6BACZM,QAAQL,WAOxBS,SAASC,eACDC,MAAQrC,KAAKI,SAASkC,QAAQtC,KAAKK,aACrB,SAAd+B,WAAwBC,MAAQ,OAC3BjB,eAAepB,KAAKI,SAASiC,MAAQ,IACrB,SAAdD,WAAwBC,MAAQrC,KAAKI,SAASmC,OAAS,QACzDnB,eAAepB,KAAKI,SAASiC,MAAQ,SAEzC5B,4BACAC,iBAOTU,eAAeE,WACNjB,YAAciB,KAMvBf,oBACIV,SAAS2C,iBAAiB,SAAUC,QAC5BA,MAAMC,OAAOC,QAAQ,kCAChBR,SAAS,QAEdM,MAAMC,OAAOC,QAAQ,kCAChBR,SAAS,QAEdM,MAAMC,OAAOC,QAAQ,gCAChBjC,kCAcN,CACXkC,KALS,SACLlD"}