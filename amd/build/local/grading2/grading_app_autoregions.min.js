define("mod_competvet/local/grading2/grading_app_autoregions",["exports","core/templates","../competstate","core/notification","../new-repository"],(function(_exports,_templates,_competstate,_notification,_newRepository){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Autoregions scans the grading app for regions tagged with data-auto-region and subscribes to the state.
   * The initial data is fetched from the web service and the region is rendered with the template.
   * The content of a div with data-auto-region="regionname" is found in the templates/auto-region/regionname.mustache file.
   * The data is typically fetched from the /json folder in the module (when used as dummy data) or from the web service.
   *
   * @module     mod_competvet/local/grading2/grading_app_autoregions
   * @copyright  2024 Bas Brands <bas@sonsbeekmedia.nl>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_templates=_interopRequireDefault(_templates),_competstate=_interopRequireDefault(_competstate),_notification=_interopRequireDefault(_notification),_newRepository=_interopRequireDefault(_newRepository);const gradingApp=document.querySelector('[data-region="grading-app"]'),getAutoRegions=()=>{gradingApp.querySelectorAll("[data-auto-region]").forEach((region=>{const regionName=region.dataset.autoRegion,templateName="mod_competvet/auto-region/"+regionName;_competstate.default.subscribe(regionName,(context=>{void 0!==context[regionName]&&_templates.default.render(templateName,context).then((html=>{region.innerHTML=html})).catch(_notification.default.exception)}))})),updateAutoRegions()},updateAutoRegions=()=>{const autoRegions=gradingApp.querySelectorAll("[data-auto-region]");let stateData=_competstate.default.getData();autoRegions.forEach((region=>{const regionName=region.dataset.autoRegion,args={filename:regionName};_newRepository.default.getJsonData(args).then((response=>{const context=JSON.parse(response.data);stateData[regionName]=context,_competstate.default.setData(stateData)})).catch(_notification.default.exception)}))};getAutoRegions();var _default={getAutoRegions:getAutoRegions,updateAutoRegions:updateAutoRegions};return _exports.default=_default,_exports.default}));

//# sourceMappingURL=grading_app_autoregions.min.js.map