{"version":3,"file":"plannings.min.js","sources":["../../../src/local/view/plannings.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Helper to filter the plannings\n *\n * @module     mod_competvet/local/view/plannings\n * @copyright  2024 Bas Brands <bas@sonsbeekmedia.nl>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n\n\nexport const init = () => {\n    // Student Search\n    const studentSearchInput = document.querySelector('input[name=\"studentsearch\"]');\n    studentSearchInput.addEventListener('input', (e) => {\n        studentSearch(e);\n    });\n\n    // Group Search\n    const groupSearchInput = document.querySelector('input[name=\"groupsearch\"]');\n    groupSearchInput.addEventListener('input', (e) => {\n        groupSearch(e);\n    });\n\n    // Ungraded checkbox\n    const ungradedCheckbox = document.querySelector('input[id=\"searchungraded\"]');\n    ungradedCheckbox.addEventListener('change', (e) => {\n        ungradedSearch(e);\n    });\n\n    // Start date search\n    const startDateInput = document.querySelector('input[name=\"startdate\"]');\n    startDateInput.addEventListener('change', (e) => {\n        let unixTimestamp = 0;\n        if (e.target.value) {\n            // Convert the date string to a Date object\n            const dateObject = new Date(e.target.value);\n\n            // Convert the date object to a UNIX timestamp in milliseconds\n            const timestamp = dateObject.getTime();\n\n            // If you want the timestamp in seconds (like PHP's time() function),\n            // you can divide by 1000 and round it or floor it:\n            unixTimestamp = Math.floor(timestamp / 1000);\n        }\n        // Minus 1 day to include the selected day\n        unixTimestamp = unixTimestamp - 86400;\n        startDateSearch(unixTimestamp);\n    });\n\n    // Clear the startDateInput and reset the search.\n    const clearStartDate = document.querySelector('button[id=\"clearstartdate\"]');\n    clearStartDate.addEventListener('click', () => {\n        startDateInput.value = '';\n        startDateSearch(0);\n    });\n\n};\n\nconst studentSearch = (e) => {\n    const search = e.target.value;\n    const students = document.querySelectorAll('[data-region=\"studentname\"]');\n    students.forEach((student) => {\n        const studentName = student.textContent;\n        const row = student.closest('tr');\n        if (studentName.toLowerCase().includes(search.toLowerCase())) {\n            row.classList.remove('studentname-d-none');\n        } else {\n            row.classList.add('studentname-d-none');\n        }\n        // Check if all rows with the same planningid are hidden\n    });\n    hideEmptyPlannings();\n};\n\nconst groupSearch = (e) => {\n    const search = e.target.value;\n    const groups = document.querySelectorAll('[data-region=\"groupname\"]');\n    groups.forEach((group) => {\n        const groupName = group.textContent;\n        const row = group.closest('tr');\n        if (groupName.toLowerCase().includes(search.toLowerCase())) {\n            row.classList.remove('groupname-d-none');\n        } else {\n            row.classList.add('groupname-d-none');\n        }\n        // If a planning row is hidden, hide all student rows with the same planningid\n        const planningid = row.dataset.planningid;\n        hideStudentsInPlanning(planningid, 'groupname-d-none');\n    });\n    hideEmptyPlannings();\n};\n\nconst ungradedSearch = (e) => {\n    const checked = e.target.checked;\n    const hasgrade = document.querySelectorAll('.student[data-hasgrade=\"1\"]');\n    if (checked) {\n        hasgrade.forEach((student) => {\n            student.classList.add('ungraded-d-none');\n        });\n    } else {\n        hasgrade.forEach((student) => {\n            student.classList.remove('ungraded-d-none');\n        });\n    }\n    hideEmptyPlannings();\n};\n\nconst startDateSearch = (value) => {\n    const plannings = document.querySelectorAll('.planning');\n    plannings.forEach((planning) => {\n        const startDate = planning.dataset.starttimestamp;\n        const row = planning.closest('tr');\n        if (value < startDate) {\n            row.classList.remove('startdate-d-none');\n        } else {\n            row.classList.add('startdate-d-none');\n        }\n        const planningid = row.dataset.planningid;\n        hideStudentsInPlanning(planningid, 'startdate-d-none');\n    });\n};\n\nconst hideEmptyPlannings = () => {\n    const plannings = document.querySelectorAll('tr.planning');\n    plannings.forEach((planning) => {\n        const planningid = planning.dataset.planningid;\n        const students = document.querySelectorAll(`.student[data-planningid=\"${planningid}\"]`);\n        const hiddenStudents = document.querySelectorAll(`.student[data-planningid=\"${planningid}\"].studentname-d-none,\n            .student[data-planningid=\"${planningid}\"].groupname-d-none, .student[data-planningid=\"${planningid}\"].ungraded-d-none`);\n        if (students.length === hiddenStudents.length) {\n            const planningRow = document.querySelector(`.planning[data-planningid=\"${planningid}\"]`);\n            planningRow.classList.add('d-none');\n        } else {\n            const planningRow = document.querySelector(`.planning[data-planningid=\"${planningid}\"]`);\n            planningRow.classList.remove('d-none');\n        }\n    });\n};\n\nconst hideStudentsInPlanning = (planningid, hideclass) => {\n    const planningRow = document.querySelector(`.planning[data-planningid=\"${planningid}\"].${hideclass}`);\n    if (planningRow) {\n        const studentRows = document.querySelectorAll(`.student[data-planningid=\"${planningid}\"]`);\n        studentRows.forEach((studentRow) => {\n            studentRow.classList.add(hideclass);\n        });\n    } else {\n        const studentRows = document.querySelectorAll(`.student[data-planningid=\"${planningid}\"]`);\n        studentRows.forEach((studentRow) => {\n            studentRow.classList.remove(hideclass);\n        });\n    }\n};\n"],"names":["document","querySelector","addEventListener","e","studentSearch","groupSearch","ungradedSearch","startDateInput","unixTimestamp","target","value","timestamp","Date","getTime","Math","floor","startDateSearch","search","querySelectorAll","forEach","student","studentName","textContent","row","closest","toLowerCase","includes","classList","remove","add","hideEmptyPlannings","group","groupName","planningid","dataset","hideStudentsInPlanning","checked","hasgrade","planning","startDate","starttimestamp","students","hiddenStudents","length","hideclass","studentRow"],"mappings":"uKAyBoB,KAEWA,SAASC,cAAc,+BAC/BC,iBAAiB,SAAUC,IAC1CC,cAAcD,MAIOH,SAASC,cAAc,6BAC/BC,iBAAiB,SAAUC,IACxCE,YAAYF,MAISH,SAASC,cAAc,8BAC/BC,iBAAiB,UAAWC,IACzCG,eAAeH,YAIbI,eAAiBP,SAASC,cAAc,2BAC9CM,eAAeL,iBAAiB,UAAWC,QACnCK,cAAgB,KAChBL,EAAEM,OAAOC,MAAO,OAKVC,UAHa,IAAIC,KAAKT,EAAEM,OAAOC,OAGRG,UAI7BL,cAAgBM,KAAKC,MAAMJ,UAAY,KAG3CH,eAAgC,MAChCQ,gBAAgBR,kBAIGR,SAASC,cAAc,+BAC/BC,iBAAiB,SAAS,KACrCK,eAAeG,MAAQ,GACvBM,gBAAgB,aAKlBZ,cAAiBD,UACbc,OAASd,EAAEM,OAAOC,MACPV,SAASkB,iBAAiB,+BAClCC,SAASC,gBACRC,YAAcD,QAAQE,YACtBC,IAAMH,QAAQI,QAAQ,MACxBH,YAAYI,cAAcC,SAAST,OAAOQ,eAC1CF,IAAII,UAAUC,OAAO,sBAErBL,IAAII,UAAUE,IAAI,yBAI1BC,sBAGEzB,YAAeF,UACXc,OAASd,EAAEM,OAAOC,MACTV,SAASkB,iBAAiB,6BAClCC,SAASY,cACNC,UAAYD,MAAMT,YAClBC,IAAMQ,MAAMP,QAAQ,MACtBQ,UAAUP,cAAcC,SAAST,OAAOQ,eACxCF,IAAII,UAAUC,OAAO,oBAErBL,IAAII,UAAUE,IAAI,0BAGhBI,WAAaV,IAAIW,QAAQD,WAC/BE,uBAAuBF,WAAY,uBAEvCH,sBAGExB,eAAkBH,UACdiC,QAAUjC,EAAEM,OAAO2B,QACnBC,SAAWrC,SAASkB,iBAAiB,+BACvCkB,QACAC,SAASlB,SAASC,UACdA,QAAQO,UAAUE,IAAI,sBAG1BQ,SAASlB,SAASC,UACdA,QAAQO,UAAUC,OAAO,sBAGjCE,sBAGEd,gBAAmBN,QACHV,SAASkB,iBAAiB,aAClCC,SAASmB,iBACTC,UAAYD,SAASJ,QAAQM,eAC7BjB,IAAMe,SAASd,QAAQ,MACzBd,MAAQ6B,UACRhB,IAAII,UAAUC,OAAO,oBAErBL,IAAII,UAAUE,IAAI,0BAEhBI,WAAaV,IAAIW,QAAQD,WAC/BE,uBAAuBF,WAAY,wBAIrCH,mBAAqB,KACL9B,SAASkB,iBAAiB,eAClCC,SAASmB,iBACTL,WAAaK,SAASJ,QAAQD,WAC9BQ,SAAWzC,SAASkB,qDAA8Ce,kBAClES,eAAiB1C,SAASkB,qDAA8Ce,oFAC9CA,qEAA4DA,qCACxFQ,SAASE,SAAWD,eAAeC,OAAQ,CACvB3C,SAASC,mDAA4CgC,kBAC7DN,UAAUE,IAAI,cACvB,CACiB7B,SAASC,mDAA4CgC,kBAC7DN,UAAUC,OAAO,eAKnCO,uBAAyB,CAACF,WAAYW,gBACpB5C,SAASC,mDAA4CgC,yBAAgBW,YACxE,CACO5C,SAASkB,qDAA8Ce,kBAC/Dd,SAAS0B,aACjBA,WAAWlB,UAAUE,IAAIe,kBAE1B,CACiB5C,SAASkB,qDAA8Ce,kBAC/Dd,SAAS0B,aACjBA,WAAWlB,UAAUC,OAAOgB"}