{"version":3,"file":"generic_form_helper.min.js","sources":["../../../src/local/forms/generic_form_helper.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript adding a new observation.\n *\n * @module     mod_competvet/local/forms/observation_add_form\n * @copyright  2023 Laurent David <laurent@call-learning.fr>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ModalForm from 'core_form/modalform';\nimport {get_string as getString} from 'core/str';\nimport Notification from 'core/notification';\n\n/**\n * Handle the follow up form.\n * @param {Event} event\n */\nconst defaultSubmitEventHandler = (event) => {\n    if (event.detail.returnurl) {\n        window.location.assign(event.detail.returnurl);\n        window.location.reload();\n    } else {\n        Notification.addNotification({\n            type: 'error',\n            message: event.detail.error,\n        });\n    }\n};\n/**\n * Initialize module\n * @param {string} action\n * @param {string} modulename\n * @param {string} formname\n * @param {function} submitEventHandler\n */\nexport const genericForm = (action, modulename, formname, submitEventHandler) => {\n    const selectedElements = getSelectedElement(action);\n    if (!selectedElements) {\n        return;\n    }\n    if (typeof submitEventHandler === \"undefined\") {\n        submitEventHandler = defaultSubmitEventHandler;\n    }\n    selectedElements.forEach((element) => {\n        element.addEventListener('click', (event) => {\n            event.preventDefault();\n            const data = event.target.closest('[data-action]').dataset; // Event can be sent by subelements.\n            const modal = genericFormCreate(data, action, modulename, formname);\n            modal.addEventListener(modal.events.FORM_SUBMITTED, submitEventHandler);\n            modal.show();\n        });\n    });\n};\n/**\n * Create the form and show it.\n *\n * @param {object} data\n * @param {string} action\n * @param {string} modulename\n * @param {string} formname\n */\nexport const genericFormCreate = (data, action, modulename, formname) => {\n    const datasetLowercase = Object.entries(data).reduce((acc, [key, value]) => {\n        acc[key.toLowerCase()] = value; // Convert key to lowercase\n        return acc;\n    }, {});\n\n    const modalForm = new ModalForm({\n        modalConfig: {\n            title: getString(`${action}`, modulename),\n        },\n        formClass: `${modulename}\\\\form\\\\${formname}`,\n        args: {\n            ...datasetLowercase,\n            currenturl: window.location.href,\n        },\n        saveButtonText: getString(`${action}:save`, modulename),\n    });\n    return modalForm;\n};\n\n/**\n * Get selected element\n * @param {string} actionName\n * @return {*}\n */\nexport const getSelectedElement = (actionName) => {\n    actionName = actionName.replace(':', '-');\n    return document.querySelectorAll(`[data-action=\"${actionName}\"]`);\n};\n\n// Create a simplified version of the above code in a single function.\n// The"],"names":["defaultSubmitEventHandler","event","detail","returnurl","window","location","assign","reload","addNotification","type","message","error","action","modulename","formname","submitEventHandler","selectedElements","getSelectedElement","forEach","element","addEventListener","preventDefault","data","target","closest","dataset","modal","genericFormCreate","events","FORM_SUBMITTED","show","datasetLowercase","Object","entries","reduce","acc","key","value","toLowerCase","ModalForm","modalConfig","title","formClass","args","currenturl","href","saveButtonText","actionName","replace","document","querySelectorAll"],"mappings":";;;;;;;wPA+BMA,0BAA6BC,QAC3BA,MAAMC,OAAOC,WACbC,OAAOC,SAASC,OAAOL,MAAMC,OAAOC,WACpCC,OAAOC,SAASE,gCAEHC,gBAAgB,CACzBC,KAAM,QACNC,QAAST,MAAMC,OAAOS,8BAWP,CAACC,OAAQC,WAAYC,SAAUC,4BAChDC,iBAAmBC,mBAAmBL,QACvCI,wBAG6B,IAAvBD,qBACPA,mBAAqBf,2BAEzBgB,iBAAiBE,SAASC,UACtBA,QAAQC,iBAAiB,SAAUnB,QAC/BA,MAAMoB,uBACAC,KAAOrB,MAAMsB,OAAOC,QAAQ,iBAAiBC,QAC7CC,MAAQC,kBAAkBL,KAAMV,OAAQC,WAAYC,UAC1DY,MAAMN,iBAAiBM,MAAME,OAAOC,eAAgBd,oBACpDW,MAAMI,qBAYLH,kBAAoB,CAACL,KAAMV,OAAQC,WAAYC,kBAClDiB,iBAAmBC,OAAOC,QAAQX,MAAMY,QAAO,CAACC,gBAAMC,IAAKC,mBAC7DF,IAAIC,IAAIE,eAAiBD,MAClBF,MACR,WAEe,IAAII,mBAAU,CAC5BC,YAAa,CACTC,OAAO,6BAAa7B,QAAUC,aAElC6B,oBAAc7B,8BAAqBC,UACnC6B,KAAM,IACCZ,iBACHa,WAAYxC,OAAOC,SAASwC,MAEhCC,gBAAgB,6BAAalC,gBAAeC,kEAUvCI,mBAAsB8B,aAC/BA,WAAaA,WAAWC,QAAQ,IAAK,KAC9BC,SAASC,yCAAkCH"}