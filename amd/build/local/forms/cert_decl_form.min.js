define("mod_competvet/local/forms/cert_decl_form",["exports","./generic_form_helper"],(function(_exports,_generic_form_helper){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0;
/**
   * Create a Modal Form to add a Certificate Declaration
   *
   * @module     mod_competvet/local/forms/cert_decl_form
   * @copyright  2024 Bas Brands <bas@sonsbeekmedia.nl>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */
const getDataset=element=>{const gradingApp=document.querySelector('[data-region="grading-app"]');let data;data=gradingApp?gradingApp.dataset:element.dataset;const datasetLowercase=Object.entries(data).reduce(((acc,_ref)=>{let[key,value]=_ref;return acc[key.toLowerCase()]=value,acc}),{});return datasetLowercase.criterionid=element.dataset.id,element.dataset.declId&&(datasetLowercase.declid=element.dataset.declId),datasetLowercase},defaultSubmitEventHandler=()=>{location.reload()};_exports.init=function(modulename){let submitEventHandler=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;document.addEventListener("click",(function(event){if(event.target.closest('[data-action="cert-decl-student"]')){event.preventDefault();const button=event.target.closest('[data-action="cert-decl-student"]'),dataset=getDataset(button),modalForm=(0,_generic_form_helper.genericFormCreate)(dataset,"certdecl",modulename,"cert_decl_student");modalForm.addEventListener(modalForm.events.FORM_SUBMITTED,null!=submitEventHandler?submitEventHandler:defaultSubmitEventHandler),modalForm.addEventListener(modalForm.events.LOADED,(()=>{modalForm.modal.getRoot().on("modal:bodyRendered",(()=>{const rangeInput=modalForm.modal.getRoot().find('input[type="range"]'),levelInput=modalForm.modal.getRoot().find('input[name="level"]');let levelVal=levelInput.val();levelInput.val()||(levelVal=3,levelInput.val(levelVal));const currentLevel=modalForm.modal.getRoot().find('[data-region="current-level"]');rangeInput.val(levelVal),currentLevel.text(levelVal),rangeInput.on("input",(()=>{levelInput.val(rangeInput.val()),currentLevel.text(rangeInput.val())}))}))})),modalForm.show()}if(event.target.closest('[data-action="cert-decl-evaluator"]')){const button=event.target.closest('[data-action="cert-decl-evaluator"]'),dataset=getDataset(button),modalForm=(0,_generic_form_helper.genericFormCreate)(dataset,"certdecl",modulename,"cert_decl_evaluator");modalForm.addEventListener(modalForm.events.FORM_SUBMITTED,null!=submitEventHandler?submitEventHandler:defaultSubmitEventHandler),modalForm.addEventListener(modalForm.events.FORM_SUBMITTED,null!=submitEventHandler?submitEventHandler:defaultSubmitEventHandler),modalForm.addEventListener(modalForm.events.LOADED,(()=>{modalForm.modal.getRoot().on("modal:bodyRendered",(()=>{const rangeInput=modalForm.modal.getRoot().find('input[type="range"]'),levelInput=modalForm.modal.getRoot().find('input[name="level"]'),currentLevel=modalForm.modal.getRoot().find('[data-region="current-level"]');rangeInput.val(levelInput.val()),currentLevel.text(levelInput.val())}))})),modalForm.show()}}))}}));

//# sourceMappingURL=cert_decl_form.min.js.map