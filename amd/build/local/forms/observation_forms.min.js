define("mod_competvet/local/forms/observation_forms",["exports","core_form/modalform","core/str","core/notification","core/modal_factory","core/modal_events","core/ajax","core/templates"],(function(_exports,_modalform,_str,_notification,_modal_factory,_modal_events,_ajax,_templates){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Javascript adding a new observation.
   *
   * @module     mod_competvet/local/forms/observation_add_form
   * @copyright  2023 Laurent David <laurent@call-learning.fr>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.initUserAsk=_exports.initEdit=_exports.initDelete=_exports.initAsk=_exports.initAdd=void 0,_modalform=_interopRequireDefault(_modalform),_notification=_interopRequireDefault(_notification),_modal_factory=_interopRequireDefault(_modal_factory),_modal_events=_interopRequireDefault(_modal_events),_ajax=_interopRequireDefault(_ajax),_templates=_interopRequireDefault(_templates);const defaultSubmitEventHandler=event=>{event.detail.returnurl?(window.location.assign(event.detail.returnurl),window.location.reload()):_notification.default.addNotification({type:"error",message:event.detail.error})},genericForm=async(action,modulename,submitEventHandler)=>{const selectedElements=getSelectedElement(action);selectedElements&&(void 0===typeof submitEventHandler&&(submitEventHandler=defaultSubmitEventHandler),selectedElements.forEach((element=>{element.addEventListener("click",(event=>{event.preventDefault();const dataset=event.target.closest("[data-action]").dataset,datasetLowercase=Object.entries(dataset).reduce(((acc,_ref)=>{let[key,value]=_ref;return acc[key.toLowerCase()]=value,acc}),{}),modalForm=new _modalform.default({modalConfig:{title:(0,_str.get_string)("observation:".concat(action),modulename)},formClass:"".concat(modulename,"\\form\\eval_observation_").concat(action),args:{...datasetLowercase,currenturl:window.location.href},saveButtonText:(0,_str.get_string)("observation:".concat(action,":save"),modulename)});modalForm.addEventListener(modalForm.events.FORM_SUBMITTED,submitEventHandler),modalForm.show()}))})))};_exports.initAdd=modulename=>{genericForm("add",modulename)};_exports.initEdit=modulename=>{genericForm("edit",modulename)};_exports.initAsk=modulename=>{genericForm("ask",modulename,(event=>{(0,_str.get_string)("observation:ask",modulename).then((title=>{_modal_factory.default.create({title:title,body:_templates.default.render("mod_competvet/view/eval_ask_observation_modal",{planningid:event.detail.planningid,studentid:event.detail.studentid,observers:event.detail.observers,context:event.detail.context}),type:_modal_factory.default.types.CANCEL,large:!0}).then((modal=>(modal.show(),modal))).catch(_notification.default.exception)}))}))};_exports.initUserAsk=(modulename,planningId,studentId,context)=>{const selectedElements=document.querySelectorAll(".ask-observation-modal [data-user-id]");selectedElements&&selectedElements.forEach((element=>{element.addEventListener("click",(event=>{event.preventDefault(),_ajax.default.call([{methodname:"mod_competvet_eval_ask_for_observation",args:{context:context,planningid:planningId,observerid:element.dataset.userId,studentid:studentId},done:data=>{data.todoid?element.classList.add("text-success"):(0,_str.get_string)("todo:cannotadd").then((message=>_notification.default.exception({message:message})))},fail:_notification.default.exception}])}))}))};const getSelectedElement=actionName=>document.querySelectorAll('[data-action="eval-observation-'.concat(actionName,'"]'));_exports.initDelete=modulename=>{const selectedElements=getSelectedElement("delete");selectedElements&&selectedElements.forEach((element=>{element.addEventListener("click",(event=>{event.preventDefault(),(0,_str.get_string)("observation:delete",modulename).then((title=>{_modal_factory.default.create({title:title,body:(0,_str.get_string)("observation:delete:confirm",modulename),type:_modal_factory.default.types.SAVE_CANCEL,large:!0}).then((modal=>(modal.getRoot().on(_modal_events.default.save,(()=>{_ajax.default.call([{methodname:"mod_competvet_eval_delete_observation",args:{observationid:event.target.dataset.id},done:data=>{data.success?(modal.hide(),window.location.assign(event.target.dataset.returnurl),window.location.reload()):_notification.default.exception({message:data.error})},fail:_notification.default.exception}])})),modal.show(),modal))).catch(_notification.default.exception)}))}))}))}}));

//# sourceMappingURL=observation_forms.min.js.map