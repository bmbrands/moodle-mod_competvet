{"version":3,"file":"observation_forms.min.js","sources":["../../../src/local/forms/observation_forms.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript adding a new observation.\n *\n * @module     mod_competvet/local/forms/observation_add_form\n * @copyright  2023 Laurent David <laurent@call-learning.fr>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ModalForm from 'core_form/modalform';\nimport {get_string as getString} from 'core/str';\nimport Notification from 'core/notification';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport Ajax from 'core/ajax';\n/**\n * Initialize module\n * @param {string} action\n * @param {string} modulename\n */\nexport const initForm = async (action, modulename) => {\n    const selectedElements = document.querySelectorAll(`[data-action=\"eval-observation-${action}\"]`);\n    if (!selectedElements.length) {\n        return;\n    }\n    selectedElements.forEach((element) => {\n        element.addEventListener('click', (event) => {\n            event.preventDefault();\n            const datasetLowercase = Object.entries(event.target.dataset).reduce((acc, [key, value]) => {\n                acc[key.toLowerCase()] = value; // Convert key to lowercase\n                return acc;\n            }, {});\n\n            const modalForm = new ModalForm({\n                modalConfig: {\n                    title: getString(`observation:${action}`, modulename),\n                },\n                formClass: `${modulename}\\\\form\\\\eval_observation_${action}`,\n                args: {\n                    ...datasetLowercase,\n                    currenturl: window.location.href,\n                },\n                saveButtonText: getString(`observation:${action}:save`, modulename),\n            });\n            modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, event => {\n                if (event.detail.returnurl) {\n                    window.location.assign(event.detail.returnurl);\n                    window.location.reload();\n                } else {\n                    Notification.addNotification({\n                        type: 'error',\n                        message: event.detail.error,\n                    });\n                }\n            });\n            modalForm.show();\n        });\n    });\n};\n\nexport const initAdd = (modulename) => {\n    initForm('add', modulename);\n};\n\nexport const initEdit = (modulename) => {\n    initForm('edit', modulename);\n};\n\nexport const initAsk = (modulename) => {\n    initForm('ask', modulename);\n};\n\nexport const initDelete = (modulename) => {\n    const selectedElements = document.querySelectorAll(`[data-action=\"eval-observation-delete\"]`);\n    if (!selectedElements.length) {\n        return;\n    }\n\n    selectedElements.forEach((element) => {\n        element.addEventListener('click', (event) => {\n            event.preventDefault();\n            // Init an ok cancel modal.\n            getString('deleteobservation', modulename).then((title) => {\n                ModalFactory.create({\n                    title: title,\n                    body: getString('deleteobservationconfirm', modulename),\n                    type: ModalFactory.types.SAVE_CANCEL,\n                    large: true\n                }).then((modal) => {\n\n                    // Handle save event.\n                    modal.getRoot().on(ModalEvents.save, () => {\n                        // Query the APO delete_observation from mod_competvet_eval\n                        Ajax.call([{\n                            methodname: 'mod_competvet_eval_delete_observation',\n                            args: {\n                                observationid: event.target.dataset.id,\n                            },\n                            done: (data) => {\n                                if (data.success) {\n                                    // Close the modal.\n                                    modal.hide();\n                                    // Reload the page.\n                                    window.location.reload();\n                                } else {\n                                    Notification.exception({message: data.error});\n                                }\n                            },\n                            fail: Notification.exception\n                        }]);\n                    });\n                    modal.show();\n\n                    return modal;\n                }).catch(Notification.exception);\n            });\n        });\n    });\n};\n"],"names":["initForm","async","action","modulename","selectedElements","document","querySelectorAll","length","forEach","element","addEventListener","event","preventDefault","datasetLowercase","Object","entries","target","dataset","reduce","acc","key","value","toLowerCase","modalForm","ModalForm","modalConfig","title","formClass","args","currenturl","window","location","href","saveButtonText","events","FORM_SUBMITTED","detail","returnurl","assign","reload","addNotification","type","message","error","show","then","create","body","ModalFactory","types","SAVE_CANCEL","large","modal","getRoot","on","ModalEvents","save","call","methodname","observationid","id","done","data","success","hide","exception","fail","Notification","catch"],"mappings":";;;;;;;oZAkCaA,SAAWC,MAAOC,OAAQC,oBAC7BC,iBAAmBC,SAASC,0DAAmDJ,cAChFE,iBAAiBG,QAGtBH,iBAAiBI,SAASC,UACtBA,QAAQC,iBAAiB,SAAUC,QAC/BA,MAAMC,uBACAC,iBAAmBC,OAAOC,QAAQJ,MAAMK,OAAOC,SAASC,QAAO,CAACC,gBAAMC,IAAKC,mBAC7EF,IAAIC,IAAIE,eAAiBD,MAClBF,MACR,IAEGI,UAAY,IAAIC,mBAAU,CAC5BC,YAAa,CACTC,OAAO,yCAAyBxB,QAAUC,aAE9CwB,oBAAcxB,+CAAsCD,QACpD0B,KAAM,IACCf,iBACHgB,WAAYC,OAAOC,SAASC,MAEhCC,gBAAgB,yCAAyB/B,gBAAeC,cAE5DoB,UAAUb,iBAAiBa,UAAUW,OAAOC,gBAAgBxB,QACpDA,MAAMyB,OAAOC,WACbP,OAAOC,SAASO,OAAO3B,MAAMyB,OAAOC,WACpCP,OAAOC,SAASQ,gCAEHC,gBAAgB,CACzBC,KAAM,QACNC,QAAS/B,MAAMyB,OAAOO,WAIlCpB,UAAUqB,0DAKEzC,aACpBH,SAAS,MAAOG,+BAGKA,aACrBH,SAAS,OAAQG,8BAGGA,aACpBH,SAAS,MAAOG,iCAGOA,mBACjBC,iBAAmBC,SAASC,4DAC7BF,iBAAiBG,QAItBH,iBAAiBI,SAASC,UACtBA,QAAQC,iBAAiB,SAAUC,QAC/BA,MAAMC,qCAEI,oBAAqBT,YAAY0C,MAAMnB,+BAChCoB,OAAO,CAChBpB,MAAOA,MACPqB,MAAM,mBAAU,2BAA4B5C,YAC5CsC,KAAMO,uBAAaC,MAAMC,YACzBC,OAAO,IACRN,MAAMO,QAGLA,MAAMC,UAAUC,GAAGC,sBAAYC,MAAM,mBAE5BC,KAAK,CAAC,CACPC,WAAY,wCACZ9B,KAAM,CACF+B,cAAehD,MAAMK,OAAOC,QAAQ2C,IAExCC,KAAOC,OACCA,KAAKC,SAELX,MAAMY,OAENlC,OAAOC,SAASQ,gCAEH0B,UAAU,CAACvB,QAASoB,KAAKnB,SAG9CuB,KAAMC,sBAAaF,gBAG3Bb,MAAMR,OAECQ,SACRgB,MAAMD,sBAAaF"}