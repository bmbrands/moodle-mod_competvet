{"version":3,"file":"observation_forms.min.js","sources":["../../../src/local/forms/observation_forms.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript adding a new observation.\n *\n * @module     mod_competvet/local/forms/observation_add_form\n * @copyright  2023 Laurent David <laurent@call-learning.fr>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ModalForm from 'core_form/modalform';\nimport {get_string as getString} from 'core/str';\nimport Notification from 'core/notification';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport Ajax from 'core/ajax';\nimport Template from \"core/templates\";\n\n/**\n * Handle the follow up form.\n * @param {Event} event\n */\nconst defaultSubmitEventHandler = (event) => {\n    if (event.detail.returnurl) {\n        window.location.assign(event.detail.returnurl);\n        window.location.reload();\n    } else {\n        Notification.addNotification({\n            type: 'error',\n            message: event.detail.error,\n        });\n    }\n};\n/**\n * Initialize module\n * @param {string} action\n * @param {string} modulename\n * @param {function} submitEventHandler\n */\nconst genericForm = async (action, modulename, submitEventHandler) => {\n    const selectedElements = getSelectedElement(action);\n    if (!selectedElements) {\n        return;\n    }\n    if (typeof submitEventHandler === undefined) {\n        submitEventHandler = defaultSubmitEventHandler;\n    }\n    selectedElements.forEach((element) => {\n        element.addEventListener('click', (event) => {\n            event.preventDefault();\n            const dataset = event.target.closest('[data-action]').dataset; // Event can be sent by subelements.\n            const datasetLowercase = Object.entries(dataset).reduce((acc, [key, value]) => {\n                acc[key.toLowerCase()] = value; // Convert key to lowercase\n                return acc;\n            }, {});\n\n            const modalForm = new ModalForm({\n                modalConfig: {\n                    title: getString(`observation:${action}`, modulename),\n                },\n                formClass: `${modulename}\\\\form\\\\eval_observation_${action}`,\n                args: {\n                    ...datasetLowercase,\n                    currenturl: window.location.href,\n                },\n                saveButtonText: getString(`observation:${action}:save`, modulename),\n            });\n            modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, submitEventHandler);\n            modalForm.show();\n        });\n    });\n};\n\nexport const initAdd = (modulename) => {\n    genericForm('add', modulename);\n};\n\nexport const initEdit = (modulename) => {\n    genericForm('edit', modulename);\n};\n\nexport const initAsk = (modulename) => {\n    const handleAskSubmit = (event) => {\n        getString('observation:ask', modulename).then((title) => {\n            ModalFactory.create({\n                title: title,\n                body: Template.render('mod_competvet/view/eval_ask_observation_modal', {\n                    'planningid': event.detail.planningid,\n                    'studentid': event.detail.studentid,\n                    'observers': event.detail.observers,\n                    'context': event.detail.context,\n                }),\n                type: ModalFactory.types.CANCEL,\n                large: true\n            }).then((modal) => {\n                modal.show();\n                return modal;\n            }).catch(Notification.exception);\n        });\n    };\n    genericForm('ask', modulename, handleAskSubmit);\n};\n\nexport const initUserAsk = (modulename, planningId, studentId, context) => {\n    const selectedElements = document.querySelectorAll('.ask-observation-modal [data-user-id]');\n    if (!selectedElements) {\n        return;\n    }\n    selectedElements.forEach((element) => {\n        element.addEventListener('click', (event) => {\n            event.preventDefault();\n            Ajax.call([{\n                methodname: 'mod_competvet_eval_ask_for_observation',\n                args: {\n                    context: context,\n                    planningid: planningId,\n                    observerid: element.dataset.userId,\n                    studentid: studentId,\n                },\n                done: (data) => {\n                    if (data.todoid) {\n                        element.classList.add('text-success');\n                    } else {\n                        getString('todo:cannotadd').then((message) => Notification.exception({message}));\n                    }\n                },\n                fail: Notification.exception\n            }]);\n        });\n    });\n};\n\nconst getSelectedElement = (actionName) => {\n    return document.querySelectorAll(`[data-action=\"eval-observation-${actionName}\"]`);\n};\n\nexport const initDelete = (modulename) => {\n    const selectedElements = getSelectedElement('delete');\n    if (!selectedElements) {\n        return;\n    }\n    selectedElements.forEach((element) => {\n        element.addEventListener('click', (event) => {\n            event.preventDefault();\n            // Init an ok cancel modal.\n            getString('observation:delete', modulename).then((title) => {\n                ModalFactory.create({\n                    title: title,\n                    body: getString('observation:delete:confirm', modulename),\n                    type: ModalFactory.types.SAVE_CANCEL,\n                    large: true\n                }).then((modal) => {\n\n                    // Handle save event.\n                    modal.getRoot().on(ModalEvents.save, () => {\n                        // Query the APO delete_observation from mod_competvet_eval\n                        Ajax.call([{\n                            methodname: 'mod_competvet_eval_delete_observation',\n                            args: {\n                                observationid: event.target.dataset.id,\n                            },\n                            done: (data) => {\n                                if (data.success) {\n                                    // Close the modal.\n                                    modal.hide();\n                                    // Reload the page.\n                                    window.location.assign(event.target.dataset.returnurl);\n                                    window.location.reload();\n                                } else {\n                                    Notification.exception({message: data.error});\n                                }\n                            },\n                            fail: Notification.exception\n                        }]);\n                    });\n                    modal.show();\n\n                    return modal;\n                }).catch(Notification.exception);\n            });\n        });\n    });\n};\n"],"names":["defaultSubmitEventHandler","event","detail","returnurl","window","location","assign","reload","addNotification","type","message","error","genericForm","async","action","modulename","submitEventHandler","selectedElements","getSelectedElement","undefined","forEach","element","addEventListener","preventDefault","dataset","target","closest","datasetLowercase","Object","entries","reduce","acc","key","value","toLowerCase","modalForm","ModalForm","modalConfig","title","formClass","args","currenturl","href","saveButtonText","events","FORM_SUBMITTED","show","then","create","body","Template","render","planningid","studentid","observers","context","ModalFactory","types","CANCEL","large","modal","catch","Notification","exception","planningId","studentId","document","querySelectorAll","call","methodname","observerid","userId","done","data","todoid","classList","add","fail","actionName","SAVE_CANCEL","getRoot","on","ModalEvents","save","observationid","id","success","hide"],"mappings":";;;;;;;qcAmCMA,0BAA6BC,QAC3BA,MAAMC,OAAOC,WACbC,OAAOC,SAASC,OAAOL,MAAMC,OAAOC,WACpCC,OAAOC,SAASE,gCAEHC,gBAAgB,CACzBC,KAAM,QACNC,QAAST,MAAMC,OAAOS,SAU5BC,YAAcC,MAAOC,OAAQC,WAAYC,4BACrCC,iBAAmBC,mBAAmBJ,QACvCG,wBAG6BE,WAAvBH,qBACPA,mBAAqBhB,2BAEzBiB,iBAAiBG,SAASC,UACtBA,QAAQC,iBAAiB,SAAUrB,QAC/BA,MAAMsB,uBACAC,QAAUvB,MAAMwB,OAAOC,QAAQ,iBAAiBF,QAChDG,iBAAmBC,OAAOC,QAAQL,SAASM,QAAO,CAACC,gBAAMC,IAAKC,mBAChEF,IAAIC,IAAIE,eAAiBD,MAClBF,MACR,IAEGI,UAAY,IAAIC,mBAAU,CAC5BC,YAAa,CACTC,OAAO,yCAAyBxB,QAAUC,aAE9CwB,oBAAcxB,+CAAsCD,QACpD0B,KAAM,IACCb,iBACHc,WAAYrC,OAAOC,SAASqC,MAEhCC,gBAAgB,yCAAyB7B,gBAAeC,cAE5DoB,UAAUb,iBAAiBa,UAAUS,OAAOC,eAAgB7B,oBAC5DmB,UAAUW,gCAKE/B,aACpBH,YAAY,MAAOG,+BAGEA,aACrBH,YAAY,OAAQG,8BAGAA,aAmBpBH,YAAY,MAAOG,YAlBMd,4BACX,kBAAmBc,YAAYgC,MAAMT,+BAC9BU,OAAO,CAChBV,MAAOA,MACPW,KAAMC,mBAASC,OAAO,gDAAiD,YACrDlD,MAAMC,OAAOkD,qBACdnD,MAAMC,OAAOmD,oBACbpD,MAAMC,OAAOoD,kBACfrD,MAAMC,OAAOqD,UAE5B9C,KAAM+C,uBAAaC,MAAMC,OACzBC,OAAO,IACRZ,MAAMa,QACLA,MAAMd,OACCc,SACRC,MAAMC,sBAAaC,uCAMP,CAAChD,WAAYiD,WAAYC,UAAWV,iBACrDtC,iBAAmBiD,SAASC,iBAAiB,yCAC9ClD,kBAGLA,iBAAiBG,SAASC,UACtBA,QAAQC,iBAAiB,SAAUrB,QAC/BA,MAAMsB,+BACD6C,KAAK,CAAC,CACPC,WAAY,yCACZ7B,KAAM,CACFe,QAASA,QACTH,WAAYY,WACZM,WAAYjD,QAAQG,QAAQ+C,OAC5BlB,UAAWY,WAEfO,KAAOC,OACCA,KAAKC,OACLrD,QAAQsD,UAAUC,IAAI,oCAEZ,kBAAkB7B,MAAMrC,SAAYoD,sBAAaC,UAAU,CAACrD,QAAAA,aAG9EmE,KAAMf,sBAAaC,0BAM7B7C,mBAAsB4D,YACjBZ,SAASC,0DAAmDW,sCAG5C/D,mBACjBE,iBAAmBC,mBAAmB,UACvCD,kBAGLA,iBAAiBG,SAASC,UACtBA,QAAQC,iBAAiB,SAAUrB,QAC/BA,MAAMsB,qCAEI,qBAAsBR,YAAYgC,MAAMT,+BACjCU,OAAO,CAChBV,MAAOA,MACPW,MAAM,mBAAU,6BAA8BlC,YAC9CN,KAAM+C,uBAAaC,MAAMsB,YACzBpB,OAAO,IACRZ,MAAMa,QAGLA,MAAMoB,UAAUC,GAAGC,sBAAYC,MAAM,mBAE5Bf,KAAK,CAAC,CACPC,WAAY,wCACZ7B,KAAM,CACF4C,cAAenF,MAAMwB,OAAOD,QAAQ6D,IAExCb,KAAOC,OACCA,KAAKa,SAEL1B,MAAM2B,OAENnF,OAAOC,SAASC,OAAOL,MAAMwB,OAAOD,QAAQrB,WAC5CC,OAAOC,SAASE,gCAEHwD,UAAU,CAACrD,QAAS+D,KAAK9D,SAG9CkE,KAAMf,sBAAaC,gBAG3BH,MAAMd,OAECc,SACRC,MAAMC,sBAAaC"}