define("mod_competvet/local/grading/grading_app_component",["exports","../new-repository","../competstate","../helpers","./components/auto_regions","./components/user_navigation","./components/evaluations_observations","./components/evaluations_grading","./components/list_criteria","./components/globalgrade","./components/certification_grading","./components/certification_results","./components/list_results","./components/evaluation_results"],(function(_exports,_newRepository,_competstate,_helpers,_auto_regions,_user_navigation,_evaluations_observations,_evaluations_grading,_list_criteria,_globalgrade,_certification_grading,_certification_results,_list_results,_evaluation_results){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_newRepository=_interopRequireDefault(_newRepository),_competstate=_interopRequireDefault(_competstate);class Competvet{constructor(){_defineProperty(this,"gradingApp",void 0),_defineProperty(this,"competvet",void 0),_defineProperty(this,"currentUser",void 0),this.gradingApp=document.querySelector('[data-region="grading-app"]'),this.cmId=this.gradingApp.dataset.cmId,this.userlist=[],this.currentUser=0,this.setup(),this.addEventListeners()}async setup(){await this.getUsers();const currentUserId=this.gradingApp.dataset.studentid;currentUserId&&"0"!==currentUserId?this.setCurrentUser(this.userlist.find((user=>user.id===parseInt(currentUserId)))):this.setCurrentUser(this.userlist[0])}setCurrentUser(user){_competstate.default.setValue("user",user),this.currentUser=user,this.setEvalResults(),this.setEvalGrading(),this.setCertifResults(),this.setCertifGrading(),this.setListResults(),this.setListGrading(),this.setGlobalGrade()}async setEvalResults(){const args={userid:this.currentUser.id,cmid:this.cmId},response=await _newRepository.default.getEvaluationCriteria(args);_competstate.default.setValue("evaluation-results",response)}async setEvalGrading(){const args={userid:this.currentUser.id,cmid:this.cmId},response=await _newRepository.default.getEvaluationGrading(args);if(!response.evaluationsgrading)return;const context={grading:response.evaluationsgrading};_competstate.default.setValue("evaluations-grading",context)}async setCertifResults(){const args={type:2},response=await _newRepository.default.getCriteria(args);if(!response.grids)return;const context={criteria:response.grids[0].criteria};_competstate.default.setValue("certification-results",context)}async setCertifGrading(){const args={userid:this.currentUser.id,cmid:this.cmId},response=await _newRepository.default.getCertificationGrading(args);if(!response.certifgrading)return;const context={grading:response.certifgrading};_competstate.default.setValue("certification-grading",context)}async setListResults(){const args={userid:this.currentUser.id,cmid:this.cmId},response=await _newRepository.default.getListResults(args);_competstate.default.setValue("list-results",response)}async setListGrading(){const args={type:3},response=await _newRepository.default.getCriteria(args);if(!response.grids)return;const context={criteria:response.grids[0].criteria};_competstate.default.setValue("list-criteria",context)}async getUsers(){const args={cmid:this.cmId,roletype:"student"},response=await _newRepository.default.getUserList(args);response.users&&(this.userlist=response.users)}async setGlobalGrade(){const args={cmid:this.cmId,userid:this.currentUser.id},response=await _newRepository.default.getGlobalGrade(args);response.globalgrade&&_competstate.default.setValue("globalgrade",response.globalgrade)}moveUser(direction){let index=this.userlist.indexOf(this.currentUser);"prev"===direction&&index>0?this.setCurrentUser(this.userlist[index-1]):"next"===direction&&index<this.userlist.length-1&&this.setCurrentUser(this.userlist[index+1])}addEventListeners(){document.addEventListener("click",(event=>{event.target.closest('[data-action="prevuser"]')&&this.moveUser("prev"),event.target.closest('[data-action="nextuser"]')&&this.moveUser("next"),event.target.closest('[data-action="reload"]')&&this.getEvaluations()}))}}var _default={init:()=>{new Competvet}};return _exports.default=_default,_exports.default}));

//# sourceMappingURL=grading_app_component.min.js.map