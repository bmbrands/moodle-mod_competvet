{"version":3,"file":"globalgrade.min.js","sources":["../../../../src/local/grading/components/globalgrade.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * TODO describe module globalgrade\n *\n * @module     mod_competvet/local/grading/components/globalgrade\n * @copyright  2024 Bas Brands <bas@sonsbeekmedia.nl>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport CompetState from '../../competstate';\nimport Notification from 'core/notification';\nimport Templates from 'core/templates';\nimport Repository from '../../new-repository';\n\nconst gradingApp = document.querySelector('[data-region=\"grading-app\"]');\n\nconst stateTemplate = () => {\n    const templateName = 'globalgrade';\n    const region = gradingApp.querySelector(`[data-region=\"${templateName}\"]`);\n    const template = `mod_competvet/grading/components/${templateName}`;\n    const regionRenderer = (context) => {\n        if (context[templateName] === undefined) {\n            return;\n        }\n        Templates.render(template, context).then((html) => {\n            region.innerHTML = html;\n            return;\n        }).catch(Notification.exception);\n    };\n    CompetState.subscribe(templateName, regionRenderer);\n};\n\nconst formCalculation = () => {\n    const form = document.querySelector('[data-region=\"globalgrade\"]');\n    const formData = new FormData(form);\n    const formObject = Object.fromEntries(formData);\n    const {globalgrade, user} = CompetState.getData();\n    globalgrade.userid = user.id;\n    globalgrade.finalgrade = formObject.finalgrade;\n    globalgrade.finalgradeoptions.forEach(element => {\n        if (element.value === formObject.finalgrade) {\n            element.selected = true;\n        } else {\n            element.selected = false;\n        }\n    });\n    globalgrade.comment = formObject.comment;\n    return globalgrade;\n};\n\nconst formEvents = () => {\n    const form = document.querySelector('[data-region=\"globalgrade\"]');\n    form.addEventListener('submit', async(e) => {\n        e.preventDefault();\n        const globalgrade = formCalculation();\n        await Repository.saveGlobalGrade(globalgrade);\n        CompetState.setValue('globalgrade', globalgrade);\n    });\n};\n\nstateTemplate();\nformEvents();"],"names":["gradingApp","document","querySelector","region","template","subscribe","context","undefined","render","then","html","innerHTML","catch","Notification","exception","stateTemplate","addEventListener","async","e","preventDefault","globalgrade","form","formData","FormData","formObject","Object","fromEntries","user","CompetState","getData","userid","id","finalgrade","finalgradeoptions","forEach","element","value","selected","comment","formCalculation","Repository","saveGlobalGrade","setValue"],"mappings":";;;;;;;qNA4BMA,WAAaC,SAASC,cAAc,+BAEpB,YAEZC,OAASH,WAAWE,sCADL,qBAEfE,oDAFe,oCAYTC,UAZS,eAGGC,eACUC,IAA1BD,QAAO,gCAGDE,OAAOJ,SAAUE,SAASG,MAAMC,OACtCP,OAAOQ,UAAYD,QAEpBE,MAAMC,sBAAaC,eAiC9BC,GATiBd,SAASC,cAAc,+BAC/Bc,iBAAiB,UAAUC,MAAAA,IAC5BC,EAAEC,uBACIC,YAtBU,YACdC,KAAOpB,SAASC,cAAc,+BAC9BoB,SAAW,IAAIC,SAASF,MACxBG,WAAaC,OAAOC,YAAYJ,WAChCF,YAACA,YAADO,KAAcA,MAAQC,qBAAYC,iBACxCT,YAAYU,OAASH,KAAKI,GAC1BX,YAAYY,WAAaR,WAAWQ,WACpCZ,YAAYa,kBAAkBC,SAAQC,UAC9BA,QAAQC,QAAUZ,WAAWQ,WAC7BG,QAAQE,UAAW,EAEnBF,QAAQE,UAAW,KAG3BjB,YAAYkB,QAAUd,WAAWc,QAC1BlB,aAOiBmB,SACdC,uBAAWC,gBAAgBrB,kCACrBsB,SAAS,cAAetB"}