define("mod_competvet/local/grading/components/evaluation_chart",["core/str","../../competstate","core/notification","core/templates","core/chartjs"],(function(_str,_competstate,_notification,_templates,_chartjs){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Render the evaluation chart.
   *
   * @module     mod_competvet/local/grading/components/evaluation_chart
   * @copyright  2024 Bas Brands <bas@sonsbeekmedia.nl>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */_competstate=_interopRequireDefault(_competstate),_notification=_interopRequireDefault(_notification),_templates=_interopRequireDefault(_templates),_chartjs=_interopRequireDefault(_chartjs);const gradingApp=document.querySelector('[data-region="grading-app"]'),transformContext=context=>{const data=context["evaluation-results"],labels=data.evaluations.map((criterion=>criterion.name)),graders=[],colors=["rgba(255, 99, 132, 0.2)","rgba(54, 162, 235, 0.2)","rgba(255, 206, 86, 0.2)","rgba(75, 192, 192, 0.2)","rgba(153, 102, 255, 0.2)","rgba(255, 159, 64, 0.2)"];return data.evaluations.forEach((criterion=>{criterion.grades.forEach((grade=>{if(!graders[grade.userid]){const color=colors.shift();graders[grade.userid]={label:grade.gradername,data:[],fill:!1,backgroundColor:color}}graders[grade.userid].data.push(grade.value)}))})),{labels:labels,datasets:Object.values(graders)}},chartConfig=async()=>{const title=await(0,_str.get_string)("supervisorchart","mod_competvet");return{type:"radar",options:{title:{display:!0,text:title,position:"bottom",fontSize:16},scale:{ticks:{display:!1}},plugins:{title:{display:!0,text:title,position:"bottom"},legend:{display:!0,position:"bottom"}}}}};(()=>{const region=gradingApp.querySelector('[data-region="'.concat("evaluation-chart",'"]')),template="mod_competvet/grading/components/".concat("evaluation-chart");_competstate.default.subscribe("evaluation-chart",(async context=>{void 0!==context["evaluation-chart"]&&_templates.default.render(template,context).then((async html=>{region.innerHTML=html;const canvas=document.getElementById("evaluation-chart"),config=await chartConfig();config.data=transformContext(context),new _chartjs.default(canvas,config)})).catch(_notification.default.exception)}))})()}));

//# sourceMappingURL=evaluation_chart.min.js.map