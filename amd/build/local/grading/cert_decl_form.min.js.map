{"version":3,"file":"cert_decl_form.min.js","sources":["../../../src/local/grading/cert_decl_form.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\nimport ModalForm from 'core_form/modalform';\nimport {get_string as getString} from 'core/str';\n\n/**\n * Create a Modal Form to add a Certificate Declaration\n *\n * @module     mod_competvet/local/grading/cert_decl_form\n * @copyright  2024 Bas Brands <bas@sonsbeekmedia.nl>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nexport const init = () => {\n    const submitEventHandler = () => {\n        // Fire a custom event to notify the grading app that a case has been added.\n        const gradingApp = document.querySelector('[data-region=\"grading-app\"]');\n        const customEvent = new CustomEvent('certAdded', {});\n        gradingApp.dispatchEvent(customEvent);\n    };\n    document.addEventListener('click', function(event) {\n        if (event.target.closest('[data-action=\"cert-decl\"]')) {\n            const button = event.target.closest('[data-action=\"cert-decl\"]');\n            event.preventDefault();\n            const gradingApp = document.querySelector('[data-region=\"grading-app\"]');\n            const data = gradingApp.dataset;\n            const datasetLowercase = Object.entries(data).reduce((acc, [key, value]) => {\n                acc[key.toLowerCase()] = value;\n                return acc;\n            }, {});\n            datasetLowercase.criterionid = button.dataset.id;\n            if (button.dataset.declId) {\n                datasetLowercase.declid = button.dataset.declId;\n            }\n            const modalForm = new ModalForm({\n                modalConfig: {\n                    title: getString('certdecl', 'mod_competvet'),\n                },\n                formClass: `mod_competvet\\\\form\\\\cert_decl`,\n                args: {\n                    ...datasetLowercase,\n                    currenturl: window.location.href,\n                },\n                saveButtonText: getString('save'),\n            });\n            // This sets the level field to the value of the range input.\n            modalForm.addEventListener(modalForm.events.LOADED, () => {\n                // Get the value of the range input and set it to the hidden level field.\n                modalForm.modal.getRoot().on('modal:bodyRendered', () => {\n                    const rangeInput = modalForm.modal.getRoot().find('input[type=\"range\"]');\n                    const levelInput = modalForm.modal.getRoot().find('input[name=\"level\"]');\n                    const currentLevel = modalForm.modal.getRoot().find('[data-region=\"current-level\"]');\n                    rangeInput.val(levelInput.val());\n                    currentLevel.text(levelInput.val());\n                    rangeInput.on('input', () => {\n                        levelInput.val(rangeInput.val());\n                        currentLevel.text(rangeInput.val());\n                    });\n                });\n            });\n            modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, submitEventHandler);\n            modalForm.show();\n        }\n    });\n};"],"names":["submitEventHandler","gradingApp","document","querySelector","customEvent","CustomEvent","dispatchEvent","addEventListener","event","target","closest","button","preventDefault","data","dataset","datasetLowercase","Object","entries","reduce","acc","key","value","toLowerCase","criterionid","id","declId","declid","modalForm","ModalForm","modalConfig","title","formClass","args","currenturl","window","location","href","saveButtonText","events","LOADED","modal","getRoot","on","rangeInput","find","levelInput","currentLevel","val","text","FORM_SUBMITTED","show"],"mappings":";;;;;;;8JAyBoB,WACVA,mBAAqB,WAEjBC,WAAaC,SAASC,cAAc,+BACpCC,YAAc,IAAIC,YAAY,YAAa,IACjDJ,WAAWK,cAAcF,cAE7BF,SAASK,iBAAiB,SAAS,SAASC,UACpCA,MAAMC,OAAOC,QAAQ,6BAA8B,OAC7CC,OAASH,MAAMC,OAAOC,QAAQ,6BACpCF,MAAMI,uBAEAC,KADaX,SAASC,cAAc,+BAClBW,QAClBC,iBAAmBC,OAAOC,QAAQJ,MAAMK,QAAO,CAACC,gBAAMC,IAAKC,mBAC7DF,IAAIC,IAAIE,eAAiBD,MAClBF,MACR,IACHJ,iBAAiBQ,YAAcZ,OAAOG,QAAQU,GAC1Cb,OAAOG,QAAQW,SACfV,iBAAiBW,OAASf,OAAOG,QAAQW,cAEvCE,UAAY,IAAIC,mBAAU,CAC5BC,YAAa,CACTC,OAAO,mBAAU,WAAY,kBAEjCC,2CACAC,KAAM,IACCjB,iBACHkB,WAAYC,OAAOC,SAASC,MAEhCC,gBAAgB,mBAAU,UAG9BV,UAAUpB,iBAAiBoB,UAAUW,OAAOC,QAAQ,KAEhDZ,UAAUa,MAAMC,UAAUC,GAAG,sBAAsB,WACzCC,WAAahB,UAAUa,MAAMC,UAAUG,KAAK,uBAC5CC,WAAalB,UAAUa,MAAMC,UAAUG,KAAK,uBAC5CE,aAAenB,UAAUa,MAAMC,UAAUG,KAAK,iCACpDD,WAAWI,IAAIF,WAAWE,OAC1BD,aAAaE,KAAKH,WAAWE,OAC7BJ,WAAWD,GAAG,SAAS,KACnBG,WAAWE,IAAIJ,WAAWI,OAC1BD,aAAaE,KAAKL,WAAWI,gBAIzCpB,UAAUpB,iBAAiBoB,UAAUW,OAAOW,eAAgBjD,oBAC5D2B,UAAUuB"}