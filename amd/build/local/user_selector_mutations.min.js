define("mod_competvet/local/user_selector_mutations",["exports","core/sessionstorage"],(function(_exports,Storage){function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.UserSelectorMutations=void 0,Storage=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(Storage);class UserSelectorMutations{async filtersToggle(stateManager){const state=stateManager.state;stateManager.setReadOnly(!1),state.info.filterShow=!state.info.filterShow,stateManager.setReadOnly(!0)}async userChanged(stateManager,direction){const state=stateManager.state,userList=state.users.toJSON(),currentUser=state.info.currentUser,index=userList.findIndex((user=>user.id===currentUser));if(-1===index)return;let nextIndex=index;"next"===direction?(nextIndex++,nextIndex>=userList.length&&(nextIndex=0)):(nextIndex--,nextIndex<0&&(nextIndex=userList.length-1));const nextUser=userList[nextIndex];stateManager.setReadOnly(!1),state.info.currentUser=nextUser.id,UserSelectorMutations.setCurrentUser(nextUser.id,state.cmId),stateManager.setReadOnly(!0)}static setCurrentUser(userId,cmId){const storageKey="competvet/grading/".concat(cmId,"/userList");Storage.set(storageKey,userId)}static getCurrentUser(cmId){const storageKey="competvet/grading/".concat(cmId,"/userList");return Storage.get(storageKey)}}_exports.UserSelectorMutations=UserSelectorMutations}));

//# sourceMappingURL=user_selector_mutations.min.js.map